{"version":3,"file":"static/js/383.bc8479d1.chunk.js","mappings":"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","sources":["Pages/dashboard/pages/profile/Profile.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { ChartDataContext } from \"../../../../helper/requireAuth\";\nimport Preloader from \"../../../../layouts/Preloader/Preloader\";\nimport \"./profile.css\";\nimport { Formik } from \"formik\";\nimport icon from \"../../../../Assets/pngs/profile (1).png\";\nimport icons from \"../../../../Assets/pngs/ImgUpload.png\";\n\nconst Profile = () => {\n  // grabbing data from my contex.\n  const glbData = useContext(ChartDataContext);\n  const [loading, setLoading] = useState(false);\n  const [profileData, setProfileData] = useState({\n    image: \"\",\n    kitchenDescription: \"\",\n  });\n\n  // TextArea keyword tracker\n  const [kitchenDescription, setKitchenDescription] = useState(\"\");\n  const maxLength = 450;\n  const [remainingLength, setRemainingLength] = useState(450);\n\n  const handleChanges = (event) => {\n    // setValue(event.target.value);\n    setKitchenDescription(event.target.value);\n    setRemainingLength(maxLength - kitchenDescription.length);\n  };\n\n  // to update the value % state of an image into a file acceptable to the backend\n  const [file, setFile] = useState(\"\");\n  const [isImageUploaded, setIsImageUploaded] = useState(false);\n  const [showImage, setShowImage] = useState(false);\n\n  // The Method handling image upload\n  const handleImageUpload = (event) => {\n    setIsImageUploaded(true);\n    setShowImage(true);\n    setFile(event.target.files[0]);\n    // console.log(event.target.files[0]);\n  };\n\n  // Getting Pre-existing data\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      try {\n        if (glbData) {\n          setProfileData({\n            username: glbData.username,\n            vendorName: glbData.vendorname,\n            address: glbData.mainbusinessaddress,\n            kitchenNumber: glbData.businessphonenumber,\n            emailAddress: glbData.businessemail,\n            fullName: glbData.fullName,\n          });\n        } else {\n          setProfileData({});\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, [glbData]);\n\n  if (loading) {\n    <Preloader />;\n  }\n\n  return (\n    <Formik\n      initialValues={{ profileData }}\n      onSubmit={async (values, { setSubmitting }) => {\n        setSubmitting(true);\n        const formData = new FormData();\n        formData.append(\"username\", values.username);\n        formData.append(\"vendorname\", values.vendorName);\n        formData.append(\"address\", values.address);\n        formData.append(\"kitchenNumber\", values.kitchenNumber);\n        formData.append(\"emailAddress\", values.emailAddress);\n        formData.append(\"fullName\", values.fullName);\n        formData.append(\"image\", file);\n        formData.append(\"kitchenDescription\", kitchenDescription);\n      }}\n    >\n      {(props) => {\n        const { handleChange, handleSubmit, values } = props;\n        return (\n          <div className=\"profile-container\">\n            <form onSubmit={handleSubmit} className=\"secForm\">\n              <div className=\"profile-head\">\n                <div className=\"profile-header\">\n                  <h1>Welcome {glbData.username}!</h1>\n                </div>\n                <span className=\"profile-img-header\">\n                  <span className=\"profile-img\">\n                    {/* <span className=\"img-container\">\n                        </span> */}\n                    <img\n                      src={showImage ? URL.createObjectURL(file) : icon}\n                      alt={icon}\n                    />\n                  </span>\n                  <div className=\"profile-details\">\n                    <h2>Profile</h2>\n                    <p>Update your photo and personal details.</p>\n                  </div>\n                  <div className=\"profile-btn\">\n                    <button id=\"cancel\">Cancel</button>\n                    <button id=\"save\">Save</button>\n                  </div>\n                </span>\n              </div>\n            </form>\n            <form className=\"secForm\">\n              <div className=\"form-div\">\n                <label htmlFor=\"username\" className=\"label\">\n                  Username\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  defaultValue={profileData.username}\n                  onChange={handleChange}\n                  className=\"input-field\"\n                />\n              </div>\n              <div className=\"form-div\">\n                <label htmlFor=\"website\" className=\"label\">\n                  Full Name\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"fullName\"\n                  value={profileData.fullName}\n                  onChange={handleChange}\n                  className=\"name\"\n                />\n              </div>\n\n              <div className=\"form-div\">\n                <label htmlFor=\"photo\" className=\"photo-label\">\n                  <p>Your Photo</p>\n                  <p className=\"photo-p\">\n                    This will be displayed on your profile\n                  </p>\n                </label>\n                <div className=\"labels\">\n                  <label\n                    htmlFor=\"Image1\"\n                    className={isImageUploaded ? \"uploaded\" : \"\"}\n                  >\n                    <input\n                      id=\"Image1\"\n                      name=\"image\"\n                      value={values.image}\n                      type=\"file\"\n                      accept=\"image/*\"\n                      style={{ display: \"none\" }}\n                      onChange={handleImageUpload}\n                    ></input>\n                    {showImage && (\n                      <div className=\"img-display\">\n                        {isImageUploaded && (\n                          <img src={URL.createObjectURL(file)} alt=\"food-img\" />\n                        )}\n                        {!isImageUploaded && (\n                          <img src={values.image} alt=\"food-img\" />\n                        )}\n                      </div>\n                    )}\n                    <label htmlFor=\"Image1\">\n                      <img src={icons} alt={icons} className=\"menu-inputImg\" />\n                    </label>\n                  </label>\n                </div>\n              </div>\n              <h2 className=\"businessHead\">BUSINESS DETAILS</h2>\n              <div className=\"form-div\">\n                <label htmlFor=\"vendorName\" className=\"label\">\n                  Business Name\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  defaultValue={profileData.vendorName}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-div\">\n                <label htmlFor=\"address\" className=\"label\">\n                  Address\n                </label>\n                <input\n                  type=\"address\"\n                  id=\"username\"\n                  defaultValue={profileData.address}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-div\">\n                <label htmlFor=\"kitchenNumber\" className=\"label\">\n                  Kitchen Number\n                </label>\n\n                <input\n                  type=\"numeric\"\n                  id=\"username\"\n                  defaultValue={profileData.kitchenNumber}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-div\">\n                <label htmlFor=\"email\" className=\"label\">\n                  Email Address\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"username\"\n                  defaultValue={profileData.emailAddress}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <div className=\"kitchen-container\">\n                <label htmlFor=\"kitchen-description\" className=\"photo-labels\">\n                  <p>Kitchen Description</p>\n                  <p className=\"photo-p\">Write a short description</p>\n                </label>\n                <textarea\n                  id=\"kitchen-description\"\n                  value={kitchenDescription}\n                  placeholder=\"Add a short bio...\"\n                  maxLength={maxLength}\n                  onChange={handleChanges}\n                ></textarea>\n                <div>{remainingLength} characters left</div>\n              </div>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default Profile;\n"],"names":["glbData","useContext","ChartDataContext","useState","loading","setLoading","image","kitchenDescription","profileData","setProfileData","setKitchenDescription","remainingLength","setRemainingLength","handleChanges","event","target","value","length","file","setFile","isImageUploaded","setIsImageUploaded","showImage","setShowImage","handleImageUpload","files","useEffect","username","vendorName","vendorname","address","mainbusinessaddress","kitchenNumber","businessphonenumber","emailAddress","businessemail","fullName","err","console","log","fetchData","Preloader","initialValues","onSubmit","values","setSubmitting","formData","FormData","append","props","handleChange","handleSubmit","className","src","URL","createObjectURL","icon","alt","id","htmlFor","type","defaultValue","onChange","name","accept","style","display","icons","placeholder","maxLength"],"sourceRoot":""}