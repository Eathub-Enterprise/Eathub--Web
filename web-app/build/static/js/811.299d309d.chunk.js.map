{"version":3,"file":"static/js/811.299d309d.chunk.js","mappings":"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","sources":["Pages/dashboard/pages/order/HistoryOrder.jsx","../node_modules/@mui/icons-material/CalendarToday.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport authService from \"../../../../services/auth/authService\";\nimport { Link } from \"react-router-dom\";\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\nimport Box from \"@mui/material/Box\";\nimport {\n  DataGrid,\n  gridPageCountSelector,\n  gridPageSelector,\n  useGridApiContext,\n  useGridSelector,\n} from \"@mui/x-data-grid\";\nimport { styled } from \"@mui/material/styles\";\nimport Pagination from \"@mui/material/Pagination\";\nimport PaginationItem from \"@mui/material/PaginationItem\";\nimport \"./order.css\";\n\nconst HistoryOrder = () => {\n  const [count, setCount] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await authService.getOrderedMeals();\n        setTableData(response.data.results);\n        setCount(response.data.count);\n        // console.log(response.data);\n\n        // tryna work with the date value\n        const tableDate = response.data.results.map((item) => {\n          return (item.item.date_created = new Date().toLocaleDateString(\n            \"en-US\",\n            {\n              month: \"2-digit\",\n              day: \"2-digit\",\n              year: \"numeric\",\n            }\n          ));\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  if (tableData.length === 0) {\n    return <h1>Loading Orders...</h1>;\n  }\n\n  // formatted Date\n  const date = new Date();\n  const formattedDate = date.toLocaleDateString(\"en-US\", {\n    month: \"short\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n  const prevdate = new Date();\n  prevdate.setMonth(date.getMonth() - 3);\n  const prevformattedDate = prevdate.toLocaleDateString(\"en-US\", {\n    month: \"short\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n\n  // Pagination for the Data Table\n  function CustomPagination() {\n    const apiRef = useGridApiContext();\n    const page = useGridSelector(apiRef, gridPageSelector);\n    const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n    return (\n      <Pagination\n        color=\"primary\"\n        variant=\"outlined\"\n        shape=\"rounded\"\n        page={page + 1}\n        count={pageCount}\n        // @ts-expect-error\n        renderItem={(props2) => <PaginationItem {...props2} disableRipple />}\n        onChange={(event, value) => apiRef.current.setPage(value - 1)}\n      />\n    );\n  }\n\n  const StyledDataGrid = styled(DataGrid)(({ theme }) => ({\n    border: 20,\n    borderColor: \"#000\",\n    color: theme.palette.mode === \"light\" ? \"#000\" : \"#000)\",\n    fontFamily: [\"montserrat\"].join(\",\"),\n    textAlign: \"center\",\n    WebkitFontSmoothing: \"auto\",\n    letterSpacing: \"normal\",\n    \"& .MuiDataGrid-main\": {\n      borderRadius: 10,\n      backgroundColor: theme.palette.mode === \"light\" ? \"#fff\" : \"#fff\",\n\n      // border: `.1px solid ${\n      //   theme.palette.mode === 'transparent' ? 'transparent' : 'transparent'\n      // }`,\n      boxShadow: `2px 4px 10px 1px rgba(0, 0, 0, 0.5)`,\n    },\n    \"& .MuiDataGrid-columnsContainer\": {\n      backgroundColor: theme.palette.mode === \"light\" ? \"#fff\" : \"#fff\",\n    },\n    \"& .MuiDataGrid-iconSeparator\": {\n      display: \"none\",\n    },\n    \"& .MuiDataGrid-columnHeaders\": {\n      borderBottom: `.1px solid rgba(0, 0, 0, 0.5)`,\n    },\n    \"& .MuiDataGrid-columnHeader, .MuiDataGrid-cell\": {\n      borderLeft: `.1px solid rgba(0, 0, 0, 0.5)`,\n    },\n    \"& .MuiDataGrid-columnsContainer, .MuiDataGrid-cell\": {\n      borderBottom: `.1px solid ${\n        theme.palette.mode === \"light\" ? \"#000\" : \"#000\"\n      }`,\n    },\n    \"& .MuiDataGrid-cell\": {\n      color: theme.palette.mode === \"light\" ? \"#000\" : \"#000\",\n    },\n    \"& .MuiPaginationItem-root\": {\n      borderRadius: 10,\n    },\n  }));\n\n  const columns = [\n    {\n      field: \"id\",\n      headerName: \"#\",\n      width: \"20\",\n      headerAlign: \"center\",\n    },\n    {\n      field: \"date\",\n      headerName: \"Date\",\n      editable: false,\n      headerAlign: \"center\",\n      width: \"100\",\n    },\n    {\n      field: \"meals\",\n      headerName: \"Meals\",\n      editable: false,\n      headerAlign: \"center\",\n      width: \"350\",\n    },\n    {\n      field: \"address\",\n      headerName: \"Address\",\n      editable: false,\n      headerAlign: \"center\",\n      width: \"150\",\n    },\n    {\n      field: \"price\",\n      headerName: \"Price\",\n      type: \"number\",\n      editable: false,\n      headerAlign: \"center\",\n      width: \"100\",\n    },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      editable: false,\n      width: \"150\",\n      headerAlign: \"center\",\n      // headerClassName:'accepted' ? 'lightgreen' : 'red',\n    },\n  ];\n\n  const rows = tableData.map((item) => {\n    return {\n      id: item.id,\n      date: item.item.date_created,\n      meals: item.item.food_title,\n      address: item.client.location,\n      price: item.item.food_price,\n      status: item.status,\n    };\n  });\n\n  return (\n    <div className=\"order-main\">\n      <div className=\"order-title\">\n        <main>\n          <h1>Orders</h1>\n          <div className=\"circle\">\n            <span>{count}</span>\n          </div>\n        </main>\n        <span>\n          <p>\n            <b>\n              Showing for: <CalendarTodayIcon style={{ fontSize: 18 }} />{\" \"}\n              {prevformattedDate} - {formattedDate}\n            </b>\n          </p>\n        </span>\n      </div>\n\n      {/* remember to write a functionality to filter here */}\n      <div className=\"order-bar\">\n        <ul>\n          <li>\n            <Link>All Orders</Link>\n          </li>\n          <li>\n            <Link>Completed</Link>\n          </li>\n          <li>\n            <Link>Pending</Link>\n          </li>\n          <li>\n            <Link>Canceled</Link>\n          </li>\n        </ul>\n      </div>\n\n      <div className=\"order-table\">\n        <Box sx={{ height: \"70vh\", width: \"95%\" }}>\n          <StyledDataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={5}\n            rowsPerPageOptions={[10]}\n            experimentalFeatures={{ newEditingApi: false }}\n            components={{\n              Pagination: CustomPagination,\n            }}\n          />\n        </Box>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryOrder;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 18H4V8h16v13z\"\n}), 'CalendarToday');\n\nexports.default = _default;"],"names":["useState","count","setCount","tableData","setTableData","useEffect","authService","response","data","results","map","item","date_created","Date","toLocaleDateString","month","day","year","console","error","fetchData","length","date","formattedDate","prevdate","setMonth","getMonth","prevformattedDate","StyledDataGrid","styled","DataGrid","theme","border","borderColor","color","palette","mode","fontFamily","join","textAlign","WebkitFontSmoothing","letterSpacing","borderRadius","backgroundColor","boxShadow","display","borderBottom","borderLeft","rows","id","meals","food_title","address","client","location","price","food_price","status","className","style","fontSize","sx","height","width","columns","field","headerName","headerAlign","editable","type","pageSize","rowsPerPageOptions","experimentalFeatures","newEditingApi","components","Pagination","apiRef","useGridApiContext","page","useGridSelector","gridPageSelector","pageCount","gridPageCountSelector","variant","shape","renderItem","props2","disableRipple","onChange","event","value","current","setPage","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}